{
    "swagger": "2.0",
    "host": "127.0.0.1:8000",
    "basePath": "/api/shop/",
    "info": {
        "version": "1.0.0",
        "title": "Simple API",
        "description": "A simple API to learn how to write OpenAPI Specification"
    },
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],

    "security": [],
    "definitions": {
        "DefaultHttpExceptionFields": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "http_status_code": {
                    "type": "integer"
                },
                "res_status": {
                    "type": "string",
                    "enum": [
                        "DUPLICATE_TO_IDS",
                        "INVALID_INPUT_TO_IDS"
                    ]
                }
            },
            "required": [
                "response",
                "http_status_code",
                "res_status"
            ]
        },
        "ProductId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "BasicProduct": {
            "type": "object",
            "properties": {
                "name":{
                  "type":"string"
                },
                "description": {
                    "type": "string"
                },
                "price": {
                    "type": "number",
                    "format":"float"
                },
                "mfg_date": {
                    "type": "string"
                },
                "exp_date": {
                    "type": "string"
                },
                "stock_quantity": {
                    "type": "number",
                    "format":"int32"
                }
            },
            "required": [
                "description",
                "name",
                "stock_quantity",
                "exp_date",
                "mfg_date",
                "price"
            
            ]
        },
        "Product": {
            "allOf": [
                {
                    "$ref": "#/definitions/BasicProduct"
                },
                {
                    "$ref": "#/definitions/ProductId"
                }
            ]
        },
        "ProductWithExtraFields": {
            "allOf": [
                {
                    "$ref": "#/definitions/Product"
                },
                {
                    "type": "object",
                    "properties": {
                        "createdOn": {
                            "type": "string",
                            "format": "datetime"
                        },
                        "ProductId": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "createdOn",
                        "ProductId"
                    ]
                }
            ]
        }
    },
 "parameters": {
        "ProductId": {
            "description": "Product id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
        },
        "BasicProduct": {
            "description": "Prodcut Parameter",
            "in": "body",
            "name": "todo",
            "required": true,
            "schema": {
                "$ref": "#/definitions/BasicProduct"
            }
        },
        "CreateNewProductParameter": {
            "name": "person",
            "in": "body",
            "description": "The product to create.",
            "schema": {
                "$ref": "#/definitions/Product"
            }
        }
   
    },
    "responses": {
        "SuccessResponse": {
            "description": "success response"
        },
        "CreateNewProductResponse": {
            "description": "Success Response",
            "schema": {
                "$ref": "#/definitions/ProductWithExtraFields"
            }
        }

    },
    "paths": {
        "/products/": {
            "get": {
                "summary": "Get all products",
                "description": "Returns a list containing all products.",
                "operationId": "get_products",
                "responses": {
                    "200": {
                        "description": "A list of products",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    }
                }
            }
        },
        "/product/create/": {
            "post": {
                "operationId": "create_person",
                "summary": "Create New Product",
                "description": "Creates a new product and return the product object. This api is not idempotent.",
                "parameters": [
                    {
                        "$ref": "#/parameters/CreateNewProductParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/CreateNewProductResponse"
                    }
                }
            }
        },
        "/product/update/{id}":{
            "put":{
                "parameters": [
                {
                    "$ref": "#/parameters/ProductId"
                }
            ],
            "summary": "Updates a Product",
            "description": "Updates a Product.",
            "operationId": "update_product",
            "responses": {
                "200": {
                    "description":"A product updated Successfully.....!"
                }
            }
        }
        },
        "/product/delete/{id}": {
    "delete": {
      "summary": "Delete a product",
      "description": "Deletes a product by its ID.",
    "operationId": "delete_product",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "The ID of the product to delete"
        }
      ],
      "responses": {
        "200": {
          "description": "Product deleted successfully"
        }
      }
    }
  }
    }
  }

